name: build and push docker STAGING IMAGES

on:
  pull_request:
    branches: [ dev ]
    types: [ closed ]

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set short git commit SHA
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push frontend
        uses: docker/build-push-action@v4
        with:
          push: true
          context: "{{defaultContext}}:frontend"
          file: Dockerfile.prod
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/frontend-staging:latest,${{ secrets.DOCKERHUB_USERNAME }}/frontend-staging:${{ env.COMMIT_SHORT_SHA }}

      - name: Build and push backend
        uses: docker/build-push-action@v4
        with:
          push: true
          context: "{{defaultContext}}:backend"
          file: Dockerfile.prod
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/backend-staging:latest,${{ secrets.DOCKERHUB_USERNAME }}/backend-staging:${{ env.COMMIT_SHORT_SHA }}

      - name: Build and push image service
        uses: docker/build-push-action@v4
        with:
          push: true
          context: "{{defaultContext}}:img"
          file: Dockerfile.prod
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/img-staging:latest,${{ secrets.DOCKERHUB_USERNAME }}/img-staging:${{ env.COMMIT_SHORT_SHA }}

      - name: Build and push cities service
        uses: docker/build-push-action@v4
        with:
          push: true
          context: ./backend/scriptPostGIS
          file: ./backend/scriptPostGIS/Dockerfile.prod
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/cities-staging:latest,${{ secrets.DOCKERHUB_USERNAME }}/cities-staging:${{ env.COMMIT_SHORT_SHA }}

  webhook:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Send webhook to VPS
        run: |
          curl --fail --silent --show-error \
               --max-time 10 \
               --connect-timeout 5 \
               -X POST https://webhook.092024-bleu-2.wns.wilders.dev/hooks/update-staging \
          || echo "⚠️ Webhook failed or server is down, skipping..."

