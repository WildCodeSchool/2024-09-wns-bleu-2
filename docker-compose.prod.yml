services:
  db:
    image: postgis/postgis
    env_file:
      - .db.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      interval: 1s
      timeout: 2s
      retries: 100
    volumes:
      - ./backend/scriptPostGIS/init.sql:/docker-entrypoint-initdb.d/init.sql
      - grumpycardatabase:/var/lib/postresql/data

  adminer:
    image: adminer
    depends_on:
      db:
        condition: service_healthy
    profiles:
      - initialize
      - dev

  backend:
    image: grumpycar/backend:latest
    healthcheck:
      test: 'curl --fail --request POST --header ''content-type: application/json'' --url ''http://localhost:4000'' --data ''{"query":"query { __typename }"}'' || exit 1'
      interval: 1s
      timeout: 2s
      retries: 100
    env_file:
      - .env
      - .db.env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "4000:4000"
    profiles:
      - initialize
      - dev
    command: sh -c "npx wait-on tcp:db:5432 && npm start"

  frontend:
    image: grumpycar/frontend:latest
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --request GET --url 'http://localhost:5173' || exit 1"
      interval: 1s
      timeout: 2s
      retries: 100
    ports:
      - "5173:5173"
    profiles:
      - dev

  api_gateway:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy
      img:
        condition: service_healthy
    ports:
      - 8000:80
    profiles:
      - dev
  img :
    image: grumpycar/img:latest
    healthcheck:
      test: "curl --fail --request GET --url 'http://localhost:4000' || exit 1"
      interval: 1s
      timeout: 2s
      retries: 100
    volumes:
      - ./img/upload:/app/upload
      - ./img/clean.js:/app/clean.js
    profiles:
      - dev
  
  cities:
    image: grumpycar/cities:latest
    depends_on:
      backend:
        condition: service_healthy
    env_file:
      - .db.env
    profiles:
      - initialize
volumes:
  grumpycardatabaseprod:
