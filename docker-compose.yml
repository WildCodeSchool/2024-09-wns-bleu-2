services:
  db:
    image: postgres
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      interval: 1s
      timeout: 2s
      retries: 100

  adminer:
    image: adminer
    depends_on:
      db:
        condition: service_healthy

  backend:
    build: ./backend
    volumes:
      - ./backend/src:/app/src
    healthcheck:
      test: 'curl --fail --request POST --header ''content-type: application/json'' --url ''http://localhost:4000'' --data ''{"query":"query { __typename }"}'' || exit 1'
      #test:
      # - CMD-SHELL
      #  - "curl -f http://backend:4000?query=%7B__typename%7D -H 'Apollo-Require-Preflight: true' || exit 1"
      interval: 1s
      timeout: 2s
      retries: 100
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "4000:4000"

  frontend:
    build: ./frontend
    volumes:
      - ./frontend/src:/app/src
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --request GET --url 'http://localhost:5173' || exit 1"
      interval: 1s
      timeout: 2s
      retries: 100
    ports:
      - "5173:5173"

  api_gateway:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy
    ports:
      - 8000:80
